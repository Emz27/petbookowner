#include <stdio.h>
#include <string.h>
#include <time.h>

#define MAX_AIRPLANE	5
#define MAX_SEATS		36
#define MAX_NAME		8

int terminate=0,
	airplaneCount=3,
	state=1,
	currentPlane=-1;



char airplane[MAX_AIRPLANE][MAX_SEATS][MAX_NAME];

char planeName[MAX_AIRPLANE][20];
char departureTime[MAX_AIRPLANE][7];
char departurePlace[MAX_AIRPLANE][10];
int remainingSeats[MAX_AIRPLANE];

char errorSpacing[256]="\n\n\n\n\n\n\n\n\n\n\n\n\n\n";
char inputErrorMsg[128]="Option Not Found";
char planeNotAvailable[128]="AirPlane Not Available , Returning to Booking Menu";


int main(){
	int i;
	for(i=0;i!=MAX_AIRPLANE;i++){
		clearPlane(i);
	}
	strcpy(planeName[0],"Philippine Airlines");
	strcpy(planeName[1],"Cebu Pacific Air");
	strcpy(planeName[2],"PAL Express");
	strcpy(planeName[3],"Zest Airways");
	strcpy(planeName[4],"SkyJet");
	strcpy(departurePlace[0],"Manila");
	strcpy(departurePlace[1],"Cebu");
	strcpy(departurePlace[2],"Davao");
	strcpy(departurePlace[3],"Masbate");
	strcpy(departurePlace[4],"Bicol");
	strcpy(departureTime[0],"7:15am");
	strcpy(departureTime[1],"7:15am");
	strcpy(departureTime[2],"7:15am");
	strcpy(departureTime[3],"7:15am");
	strcpy(departureTime[4],"7:15am");

	do{
		switch(state){
			case 1:{
				system("cls");
				printf("Hello\n\n\n");
				system("pause");
				state=2;
				break;
			}
			case 2:{
				bookMenu();
				printf("Choose the Airplane ID you want to book\nEnter:");
				char input[128];
				int optionFound=0;
				scanf("%s",&input);
				
				if(strcmp(input,"0")==0){
					if(airplaneMap(0))optionFound=1;currentPlane=0;
				}
				else if(strcmp(input,"1")==0){
					if(airplaneMap(1))optionFound=1;currentPlane=1;
				}
				else if(strcmp(input,"2")==0){
					if(airplaneMap(2))optionFound=1;currentPlane=2;
				}
				else if(strcmp(input,"3")==0){
					if(airplaneMap(3))optionFound=1;currentPlane=3;
				}
				else if(strcmp(input,"4")==0){
					if(airplaneMap(4))optionFound=1;currentPlane=4;
				}
				else if(strcmp(input,"back")==0){

				}
				else if(strcmp(input,"admin")==0){
					
				}
				else{
					printf(errorSpacing);
					printf(inputErrorMsg);
					printf(errorSpacing);
					system("pause");
				}
				if(optionFound==1){
					state=3;
				}
			}
			case 3:{
				airplaneMap(currentPlane);
				printf("\nChoose Your Seat Number");
				char input[128];
				scanf("%s",&input);
				if(selectSeat(currentPlane,seatNumber(input,currentPlane))){
						
				}
				break;
			}
			case 4:{
				
				break;
			}
			case 5:{
				
				break;
			}
			case 100:{
				
				break;
			}

		}
	}
	while(!terminate);
}

int start(){
	system("pause");
	
}

int airplaneMap(planeNumber){
	if(planeName[planeNumber][0]=='\0'){
		system("cls");
		printf(errorSpacing);
		printf(planeNotAvailable);
		printf(errorSpacing);
		return 0;
	}
	system("cls");
	printf("\n\n				%8s SEAT MAP		\n",planeName[planeNumber]);
	printf("	BUSINESS CLASS		|		ECONOMIC CLASS\n");
	printf("				|\n");
	int i;
	int availableSeats=36,
		occupiedSeats=0;
	for(i=0;i<2;i++){
		int j;
		for(j=0;j!=4;j++){
			if(seatLabel(planeNumber,(j*4)+i))availableSeats--;
		}
		printf("	|	  ");
		for(j=0;j!=5;j++){
			if(seatLabel(planeNumber,(j*4)+i+16))availableSeats--;
		}
		printf("\n");
	}
	printf("\n");
	for(i=0;i<2;i++){
		int j;
		for(j=0;j!=4;j++){
			if(seatLabel(planeNumber,(j*4)+i+2))availableSeats--;
		}
		printf("	|	  ");
		for(j=0;j!=5;j++){
			if(seatLabel(planeNumber,(j*4)+i+16+2))availableSeats--;
		}
		printf("\n");
	}
	remainingSeats[planeNumber]=availableSeats;
	printf("\nAvailable Seats : %d seats\n\n",availableSeats);
	printf("Occupied Seat List : \n");
	
	for(i=0;i!=36;i++){
		if(airplane[planeNumber][i][0]!='\0'){
			printf("%2d) %8s   ",i,airplane[planeNumber][i]);
			occupiedSeats++;
			if((occupiedSeats%5)==0){															//	List Escape line
				printf("\n");
			}
		}
		
	}
	return 1;
	
}

int seatLabel(planeNumber,seat){
	if(airplane[planeNumber][seat][0]!='\0'){
		printf("XX     ");
		return 1;
	}
	else{
		printf("%2d     ",seat);
		
	}
	return 0;
}

int clearPlane(planeNumber){
	int i;
	for(i=0;i!=MAX_SEATS;i++){
		airplane[planeNumber][i][0]='\0';
	}
	remainingSeats[planeNumber]=36;
}

int bookMenu(){
	system("cls");
	int i;
	printf(" ID      Airplane Name          Outbound      Departure Time     Remaining Seats\n\n");
	for(i=0;i!=MAX_AIRPLANE;i++){
		if(planeName[i][0]!='\0')printf(" %d  %-20s     %-10s        %-7s                %-2d\n\n",i,planeName[i],departurePlace[i],departureTime[i],remainingSeats[i]);
	}
}

int selectSeat(planeNumber,seat){

	if(airplane[planeNumber][seat][0]!='\0'){
		printf(errorSpacing);
		printf("Seat Number Occupied , Returning to Seat Selection");
		printf(errorSpacing);
		system("pause");
		return 0;
	}
	char input[128];
	printf("You Chose Seat Number %d , \nPlease Enter Your Name: ",seat);
	scanf("%s",&input);
	printf("\nAre You Sure You Want To book %s in seat %d,\nEnter 1).If Yes  2.) If No",input,seat);
	char input1[128];
	scanf("%s",&input1);
	if(strcmp(input1,"1")==0){
		strcpy(airplane[currentPlane][seat],input);
		remainingSeats[currentPlane]--;
		system("cls");
		printf(errorSpacing);
		printf("You have successfully booked %s in Seat Number %d , Thank You for Patronizing our Services , Returning to Title Page\n",input,seat);
		printf(errorSpacing);
		system("pause");
		
		state=1;
	}
	else if(strcmp(input1,"2")==0){
		system("cls");
		printf(errorSpacing);
		printf("Seat Number Occupied , Returning to Seat Selection");
		printf(errorSpacing);
		system("pause");
	}
	else{
		printf(errorSpacing);
		printf("Option Not Found , Returning to Seat Selection");
		printf(errorSpacing);
		system("pause");
	}
	
}

int seatNumber(char number[128],int planeNumber){
	
	if(strcmp(number,"0")==0)return 0;
	else if(strcmp(number,"1")==0)return 1;
	else if(strcmp(number,"2")==0)return 2;
	else if(strcmp(number,"3")==0)return 3;
	else if(strcmp(number,"4")==0)return 4;
	else if(strcmp(number,"5")==0)return 5;
	else if(strcmp(number,"6")==0)return 6;
	else if(strcmp(number,"7")==0)return 7;
	else if(strcmp(number,"8")==0)return 8;
	else if(strcmp(number,"9")==0)return 9;
	else if(strcmp(number,"10")==0)return 10;
	else if(strcmp(number,"11")==0)return 11;
	else if(strcmp(number,"12")==0)return 12;
	else if(strcmp(number,"13")==0)return 13;
	else if(strcmp(number,"14")==0)return 14;
	else if(strcmp(number,"15")==0)return 15;
	else if(strcmp(number,"16")==0)return 16;
	else if(strcmp(number,"17")==0)return 17;
	else if(strcmp(number,"18")==0)return 18;
	else if(strcmp(number,"19")==0)return 19;
	else if(strcmp(number,"20")==0)return 20;
	else if(strcmp(number,"21")==0)return 21;
	else if(strcmp(number,"22")==0)return 22;
	else if(strcmp(number,"23")==0)return 23;
	else if(strcmp(number,"24")==0)return 24;
	else if(strcmp(number,"25")==0)return 25;
	else if(strcmp(number,"26")==0)return 26;
	else if(strcmp(number,"27")==0)return 27;
	else if(strcmp(number,"28")==0)return 28;
	else if(strcmp(number,"29")==0)return 29;
	else if(strcmp(number,"30")==0)return 30;
	else if(strcmp(number,"31")==0)return 31;
	else if(strcmp(number,"32")==0)return 32;
	else if(strcmp(number,"33")==0)return 33;
	else if(strcmp(number,"34")==0)return 34;
	else if(strcmp(number,"35")==0)return 35;
	else if(strcmp(number,"back")==0){
		printf(errorSpacing);
		printf("Returning to Booking Menu");
		printf(errorSpacing);
		return -1;
	}
	else if(strcmp(number,"admin")==0){
		
	}
	else{
		printf(errorSpacing);
		printf("Invalid Seat Number, Returning to Airplane Map\n");
		printf(errorSpacing);
		system("pause");
		airplaneMap(planeNumber);
		return -1;
	}
}


int checksize(char string[128]){
	int i,size=0;
	for(i=0;i!=128;i++){
		if(string[i]!='\0')size++;
	}
	return size;
}
/*

PLANE SEATS MAP

0	4	8	12	|	16	20	24	28	32
1	5	9	13	|	17	21	25	29	33
				|
2	6	10	14	|	18	22	26	30	34
3	7	11	15	|	19	23	27	31	35






     __o__   _______ _ _  _                                     /     /
     \    ~\                                                  /      /
       \     '\                                         ..../      .'
        . ' ' . ~\                                      ' /       /
       .  _    .  ~ \  .+~\~ ~ ' ' " " ' ' ~ - - - - - -''_      /
      .  <#  .  - - -/' . ' \  __                          '~ - \
       .. -           ~-.._ / |__|  ( )  ( )  ( )  0  o    _ _    ~ .
     .-'                                               .- ~    '-.    -.
    <                      . ~ ' ' .             . - ~             ~ -.__~_. _ _
      ~- .       N121PP  .          . . . . ,- ~
            ' ~ - - - - =.   <#>    .         \.._
                        .     ~      ____ _ .. ..  .- .
                         .         '        ~ -.        ~ -.
                           ' . . '               ~ - .       ~-.
                                                       ~ - .      ~ .
                                                              ~ -...0..~. ____
                                                              
                                                              
            ______
            _\ _~-\___
    =  = ==(____AA____D
                \_____\___________________,-~~~~~~~`-.._
                /     o O o o o o O O o o o o o o O o  |\_
                `~-.__        ___..----..                  )
                      `---~~\___________/------------`````
                      =  ===(_________D
                      
                      
                                           ********
                                          *      *
                                         *      *
      ***********************************      *
    *  (  )      () () () () () ()            *
  *           *        *                   *
 *             *        *               *
  ************************************  -ds
                  *       *
                   *********
                   
                   
printf("                             _\n");
printf("                            | \\n");
printf("                           _|  \______________________________________\n");
printf("                          - ______        ________________          \_`,\n");
printf("                        -(_______            -=    -=        USAF       )\n");
printf("                                 `--------=============----------------`   -\n");



printf("                                       |\n");
printf("   BOEING 777                          |\n");
printf("   by Jon Hyatt                        |\n");
printf("   whatfer@u.washington.edu          .-'-.\n");
printf("                                    ' ___ '\n");
printf("                          ---------'  .-.  '---------\n");
printf("          _________________________'  '-'  '_________________________\n");
printf("           ''''''-|---|--/    \==][^',_m_,'^][==/    \--|---|-''''''\n");
printf("                         \    /  ||/   H   \||  \    /\n");
printf("                          '--'   OO   O|O   OO   '--'\n");
*/
